name: Publish Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string
      publish_npm:
        description: 'Publish to NPM'
        required: true
        type: boolean
        default: true
      publish_pypi:
        description: 'Publish to PyPI'
        required: true
        type: boolean
        default: true

jobs:
  publish-pypi:
    if: github.event_name == 'release' || inputs.publish_pypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For PyPI trusted publishing
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Update version if manual
      if: github.event_name == 'workflow_dispatch'
      run: |
        VERSION=${{ inputs.version }}
        sed -i "s/version = \".*\"/version = \"${VERSION}\"/" pyproject.toml
        echo "Updated version to ${VERSION}"

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish to Test PyPI
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*
        echo "Test package published: https://test.pypi.org/project/llms-txt/"

    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
        echo "Package published: https://pypi.org/project/llms-txt/"

  publish-npm:
    if: github.event_name == 'release' || inputs.publish_npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'

    - name: Update version if manual
      if: github.event_name == 'workflow_dispatch'
      working-directory: mcp-package
      run: |
        VERSION=${{ inputs.version }}
        npm version ${VERSION} --no-git-tag-version
        echo "Updated version to ${VERSION}"

    - name: Install dependencies
      working-directory: mcp-package
      run: npm ci

    - name: Publish to NPM (dry run)
      if: github.event_name == 'workflow_dispatch'
      working-directory: mcp-package
      run: |
        npm publish --dry-run
        echo "Dry run completed successfully"

    - name: Publish to NPM
      if: github.event_name == 'release'
      working-directory: mcp-package
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npm publish --access public
        echo "Package published: https://www.npmjs.com/package/@llms-txt/mcp"

  create-github-release:
    if: github.event_name == 'workflow_dispatch'
    needs: [publish-pypi, publish-npm]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Create Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        VERSION=${{ inputs.version }}

        cat << EOF > release_notes.md
        # llms-txt MCP Server v${VERSION}

        ## Installation

        ### Via NPM
        \`\`\`bash
        npx @llms-txt/mcp@${VERSION}
        \`\`\`

        ### Via PyPI
        \`\`\`bash
        pip install llms-txt==${VERSION}
        \`\`\`

        ## What's Changed
        - MCP server for generating llms.txt files
        - Support for Claude Desktop, VS Code, and Cursor
        - Configurable API endpoints and timeouts

        ## Links
        - [NPM Package](https://www.npmjs.com/package/@llms-txt/mcp)
        - [PyPI Package](https://pypi.org/project/llms-txt/)
        - [Documentation](https://github.com/sshtomar/llm-txt/blob/main/MCP_README.md)
        EOF

        gh release create "v${VERSION}" \
          --title "v${VERSION}" \
          --notes-file release_notes.md \
          --draft